class Solution {
    public String decodeString(String s) {
        Stack<Character>stack=new Stack<>();
         StringBuilder res=new StringBuilder();
           
        for(char c:s.toCharArray())
        {
             if(c==']')
            {
                StringBuilder sb=new StringBuilder();
           
                 while(!stack.isEmpty()&& stack.peek()!=('['))
                {
                    sb.insert(0,stack.pop());
                }
                stack.pop();
            StringBuilder num=new StringBuilder();
            while(!stack.isEmpty() && stack.peek()>='0' && stack.peek()<='9')
            {
                num.insert(0,stack.pop());
            }
             int n=Integer.parseInt(num.toString());
            String str=sb.toString().repeat(n);
            for(int j=0;j<str.length();j++)
            {
                stack.push(str.charAt(j));
            }
         }
          else
          stack.push(c);  
            
        }
       while(!stack.isEmpty())
       {
           res.insert(0,stack.pop());
       }
       return res.toString();
    }
}
